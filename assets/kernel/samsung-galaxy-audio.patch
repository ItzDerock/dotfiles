diff --git a/sound/pci/hda/patch_realtek.c b/sound/pci/hda/patch_realtek.c
index aa76d1c88589..d8501a0896c7 100644
--- a/sound/pci/hda/patch_realtek.c
+++ b/sound/pci/hda/patch_realtek.c
@@ -4796,6 +4796,252 @@ static void alc298_fixup_samsung_amp(struct hda_codec *codec,
 	}
 }
 
+
+static inline void alc298_samsung_write_coef_pack2(struct hda_codec *codec,
+						   const unsigned short coefs[4])
+{
+	int i;
+
+	/*
+	 * The sound chip seems to indicate data is ready to be sent by setting
+	 * this bit of coefficient 0x26 to 0
+	 */
+
+	for (i = 0; i < 10; i++) {
+		if ((alc_read_coef_idx(codec, 0x26) & 0x0010) == 0)
+			break;
+	}
+
+	if (i == 10)
+		return;
+
+	alc_write_coef_idx(codec, 0x23, coefs[0]);
+	alc_write_coef_idx(codec, 0x24, coefs[1]);
+	alc_write_coef_idx(codec, 0x25, coefs[2]);
+	alc_write_coef_idx(codec, 0x26, coefs[3]);
+}
+
+struct alc298_samsung_coeff_fixup_desc {
+	unsigned char coeff_idx;
+	unsigned short coeff_value;
+};
+
+static void alc298_fixup_samsung_amp2(struct hda_codec *codec,
+				      const struct hda_fixup *fix, int action)
+{
+	int i;
+
+	/*
+	 * Magic coefficients needed to be set in order for sound to work
+	 */
+	static const struct alc298_samsung_coeff_fixup_desc fixups[] = {
+		{ 0x82, 0x4408 }, { 0x32, 0x3f00 }, { 0x0e, 0x6f80 }, { 0x10, 0x0e21 },
+		{ 0x55, 0x8000 }, { 0x08, 0x2fcf }, { 0x2d, 0xc020 }, { 0x19, 0x0017 },
+		{ 0x50, 0x1000 }, { 0x80, 0x0011 }, { 0x2b, 0x0c10 }, { 0x2d, 0xc020 },
+		{ 0x03, 0x0042 }, { 0x0f, 0x0062 }
+	};
+
+	/*
+	 * Data sent to the amp through coefficients 0x23 through 0x26
+	 * Each block ends with another coefficient getting set, either 0x22 or 0x89
+	 */
+	static const unsigned short amp1[][4] = {
+		{ 0x2000, 0x0000, 0x0001, 0xb011 }, { 0x23ff, 0x0000, 0x0000, 0xb011 },
+		{ 0x203a, 0x0000, 0x0080, 0xb011 }, { 0x23e1, 0x0000, 0x0000, 0xb011 },
+		{ 0x2012, 0x0000, 0x006f, 0xb011 }, { 0x2014, 0x0000, 0x0000, 0xb011 },
+		{ 0x201b, 0x0000, 0x0001, 0xb011 }, { 0x201d, 0x0000, 0x0001, 0xb011 },
+		{ 0x201f, 0x0000, 0x00fe, 0xb011 }, { 0x2021, 0x0000, 0x0000, 0xb011 },
+		{ 0x203d, 0x0000, 0x0005, 0xb011 }, { 0x203f, 0x0000, 0x0003, 0xb011 },
+		{ 0x2050, 0x0000, 0x002c, 0xb011 }, { 0x2076, 0x0000, 0x000e, 0xb011 },
+		{ 0x207c, 0x0000, 0x004a, 0xb011 }, { 0x2081, 0x0000, 0x0003, 0xb011 },
+		{ 0x2399, 0x0000, 0x0003, 0xb011 }, { 0x23a4, 0x0000, 0x00b5, 0xb011 },
+		{ 0x23a5, 0x0000, 0x0001, 0xb011 }, { 0x23ba, 0x0000, 0x0094, 0xb011 }
+	};
+
+	static const unsigned short amp2[][4] = {
+		{ 0x2100, 0x00d0, 0x950e, 0xb017 }
+	};
+
+	static const unsigned short amp3[][4] = {
+		{ 0x2104, 0x0061, 0xd4e2, 0xb017 }, { 0x2108, 0x00d0, 0x950e, 0xb017 },
+		{ 0x210c, 0x0075, 0xf4e2, 0xb017 }, { 0x2110, 0x00b4, 0x4b0d, 0xb017 },
+		{ 0x2114, 0x000a, 0x1000, 0xb017 }, { 0x2118, 0x0015, 0x2000, 0xb017 },
+		{ 0x211c, 0x000a, 0x1000, 0xb017 }, { 0x2120, 0x0075, 0xf4e2, 0xb017 },
+		{ 0x2124, 0x00b4, 0x4b0d, 0xb017 }, { 0x2128, 0x006c, 0xf80f, 0xb017 },
+		{ 0x212c, 0x0027, 0x0fe0, 0xb017 }, { 0x2130, 0x006c, 0xf80f, 0xb017 },
+		{ 0x2134, 0x002b, 0x0fe0, 0xb017 }, { 0x2138, 0x00dc, 0xf00f, 0xb017 },
+		{ 0x213c, 0x006c, 0xf80f, 0xb017 }, { 0x2140, 0x0027, 0x0fe0, 0xb017 },
+		{ 0x2144, 0x006c, 0xf80f, 0xb017 }, { 0x2148, 0x002b, 0x0fe0, 0xb017 },
+		{ 0x214c, 0x00dc, 0xf00f, 0xb017 }, { 0x2150, 0x0000, 0x0010, 0xb017 },
+		{ 0x2154, 0x0000, 0x0000, 0xb017 }, { 0x2158, 0x0000, 0x0000, 0xb017 },
+		{ 0x215c, 0x0000, 0x0000, 0xb017 }, { 0x2160, 0x0000, 0x0000, 0xb017 },
+		{ 0x2168, 0x0000, 0x0000, 0xb017 }, { 0x216c, 0x0000, 0x0000, 0xb017 },
+		{ 0x2170, 0x0000, 0x0000, 0xb017 }, { 0x2174, 0x0000, 0x0000, 0xb017 },
+		{ 0x2178, 0x0000, 0x0010, 0xb017 }, { 0x217c, 0x0000, 0x0000, 0xb017 },
+		{ 0x2180, 0x0000, 0x0000, 0xb017 }, { 0x2184, 0x0000, 0x0000, 0xb017 },
+		{ 0x2188, 0x0000, 0x0000, 0xb017 }, { 0x218c, 0x0000, 0x0010, 0xb017 },
+		{ 0x2190, 0x0000, 0x0000, 0xb017 }, { 0x2194, 0x0000, 0x0000, 0xb017 },
+		{ 0x2198, 0x0000, 0x0000, 0xb017 }, { 0x219c, 0x0000, 0x0000, 0xb017 },
+		{ 0x21a0, 0x0000, 0x0010, 0xb017 }, { 0x21a4, 0x0000, 0x0000, 0xb017 },
+		{ 0x21a8, 0x0000, 0x0000, 0xb017 }, { 0x21ac, 0x0000, 0x0000, 0xb017 },
+		{ 0x21b0, 0x0000, 0x0000, 0xb017 }, { 0x21b4, 0x0000, 0x0010, 0xb017 },
+		{ 0x21b8, 0x0000, 0x0000, 0xb017 }, { 0x21bc, 0x0000, 0x0000, 0xb017 },
+		{ 0x21c0, 0x0000, 0x0000, 0xb017 }, { 0x21c4, 0x0000, 0x0000, 0xb017 },
+		{ 0x21c8, 0x0056, 0xc50f, 0xb017 }, { 0x21cc, 0x007b, 0xd7e1, 0xb017 },
+		{ 0x21d0, 0x0077, 0xa70e, 0xb017 }, { 0x21d4, 0x00e0, 0xbde1, 0xb017 },
+		{ 0x21d8, 0x0032, 0x530e, 0xb017 }, { 0x2204, 0x0049, 0xa10f, 0xb017 },
+		{ 0x2208, 0x006e, 0xbde0, 0xb017 }, { 0x220c, 0x0049, 0xa10f, 0xb017 },
+		{ 0x2210, 0x0061, 0xd2e0, 0xb017 }, { 0x2214, 0x0084, 0x570f, 0xb017 },
+		{ 0x2218, 0x0079, 0x0a00, 0xb017 }, { 0x221c, 0x00f2, 0x1400, 0xb017 },
+		{ 0x2220, 0x0079, 0x0a00, 0xb017 }, { 0x2224, 0x0061, 0xd2e0, 0xb017 },
+		{ 0x2228, 0x0084, 0x570f, 0xb017 }, { 0x222c, 0x004d, 0xe20e, 0xb017 },
+		{ 0x2230, 0x0066, 0x3be2, 0xb017 }, { 0x2234, 0x004d, 0xe20e, 0xb017 },
+		{ 0x2238, 0x0058, 0x4fe2, 0xb017 }, { 0x223c, 0x008c, 0xd80d, 0xb017 },
+		{ 0x2240, 0x004d, 0xe20e, 0xb017 }, { 0x2244, 0x0066, 0x3be2, 0xb017 },
+		{ 0x2248, 0x004d, 0xe20e, 0xb017 }, { 0x224c, 0x0058, 0x4fe2, 0xb017 },
+		{ 0x2250, 0x008c, 0xd80d, 0xb017 }, { 0x2254, 0x004d, 0xe20e, 0xb017 },
+		{ 0x2258, 0x0066, 0x3be2, 0xb017 }, { 0x225c, 0x004d, 0xe20e, 0xb017 },
+		{ 0x2260, 0x0058, 0x4fe2, 0xb017 }, { 0x2264, 0x008c, 0xd80d, 0xb017 },
+		{ 0x2268, 0x004d, 0xe20e, 0xb017 }, { 0x226c, 0x0066, 0x3be2, 0xb017 },
+		{ 0x2270, 0x004d, 0xe20e, 0xb017 }, { 0x2274, 0x0058, 0x4fe2, 0xb017 },
+		{ 0x2278, 0x008c, 0xd80d, 0xb017 }, { 0x227c, 0x004d, 0xe20e, 0xb017 },
+		{ 0x2280, 0x0066, 0x3be2, 0xb017 }, { 0x2284, 0x004d, 0xe20e, 0xb017 },
+		{ 0x2288, 0x0058, 0x4fe2, 0xb017 }, { 0x228c, 0x008c, 0xd80d, 0xb017 },
+		{ 0x22cc, 0x00e8, 0x8d00, 0xb017 }, { 0x22d0, 0x0000, 0x0000, 0xb017 },
+		{ 0x22d4, 0x0018, 0x72ff, 0xb017 }, { 0x22d8, 0x00ce, 0x25e1, 0xb017 },
+		{ 0x22dc, 0x002f, 0xe40e, 0xb017 }, { 0x238e, 0x0000, 0x0033, 0xb011 },
+		{ 0x238f, 0x0000, 0x0013, 0xb011 }, { 0x2390, 0x0000, 0x00f0, 0xb011 },
+		{ 0x2392, 0x0000, 0x0093, 0xb011 }, { 0x2393, 0x0000, 0x0068, 0xb011 },
+		{ 0x2394, 0x0000, 0x0011, 0xb011 }, { 0x2395, 0x0000, 0x0064, 0xb011 },
+		{ 0x2396, 0x0000, 0x00b6, 0xb011 }, { 0x2397, 0x0000, 0x0028, 0xb011 },
+		{ 0x2398, 0x0000, 0x0008, 0xb011 }, { 0x239a, 0x0000, 0x0099, 0xb011 },
+		{ 0x239b, 0x0000, 0x000d, 0xb011 }, { 0x23a6, 0x0000, 0x0064, 0xb011 },
+		{ 0x23a7, 0x0000, 0x0078, 0xb011 }, { 0x23b9, 0x0000, 0x0000, 0xb011 },
+		{ 0x23e0, 0x0000, 0x0021, 0xb011 }, { 0x23e1, 0x0000, 0x0001, 0xb011 },
+		{ 0x203a, 0x0000, 0x0081, 0xb011 }, { 0x23ff, 0x0000, 0x0001, 0xb011 }
+	};
+
+	static const unsigned short amp4[][4] = {
+		{ 0x2000, 0x0000, 0x0001, 0xb011 }, { 0x23ff, 0x0000, 0x0000, 0xb011 },
+		{ 0x203a, 0x0000, 0x0080, 0xb011 }, { 0x23e1, 0x0000, 0x0000, 0xb011 },
+		{ 0x2012, 0x0000, 0x006f, 0xb011 }, { 0x2014, 0x0000, 0x0000, 0xb011 },
+		{ 0x201b, 0x0000, 0x0002, 0xb011 }, { 0x201d, 0x0000, 0x0002, 0xb011 },
+		{ 0x201f, 0x0000, 0x00fd, 0xb011 }, { 0x2021, 0x0000, 0x0001, 0xb011 },
+		{ 0x2022, 0x0000, 0x0010, 0xb011 }, { 0x203d, 0x0000, 0x0005, 0xb011 },
+		{ 0x203f, 0x0000, 0x0003, 0xb011 }, { 0x2050, 0x0000, 0x002c, 0xb011 },
+		{ 0x2076, 0x0000, 0x000e, 0xb011 }, { 0x207c, 0x0000, 0x004a, 0xb011 },
+		{ 0x2081, 0x0000, 0x0003, 0xb011 }, { 0x2399, 0x0000, 0x0003, 0xb011 },
+		{ 0x23a4, 0x0000, 0x00b5, 0xb011 }, { 0x23a5, 0x0000, 0x0001, 0xb011 },
+		{ 0x23ba, 0x0000, 0x0094, 0xb011 }
+	};
+
+	static const unsigned short amp5[][4] = {
+		{ 0x2100, 0x00d0, 0x950e, 0xb017 }
+	};
+
+	static const unsigned short amp6[][4] = {
+		{ 0x2104, 0x0061, 0xd4e2, 0xb017 }, { 0x2108, 0x00d0, 0x950e, 0xb017 },
+		{ 0x210c, 0x0075, 0xf4e2, 0xb017 }, { 0x2110, 0x00b4, 0x4b0d, 0xb017 },
+		{ 0x2114, 0x000a, 0x1000, 0xb017 }, { 0x2118, 0x0015, 0x2000, 0xb017 },
+		{ 0x211c, 0x000a, 0x1000, 0xb017 }, { 0x2120, 0x0075, 0xf4e2, 0xb017 },
+		{ 0x2124, 0x00b4, 0x4b0d, 0xb017 }, { 0x2128, 0x006c, 0xf80f, 0xb017 },
+		{ 0x212c, 0x0027, 0x0fe0, 0xb017 }, { 0x2130, 0x006c, 0xf80f, 0xb017 },
+		{ 0x2134, 0x002b, 0x0fe0, 0xb017 }, { 0x2138, 0x00dc, 0xf00f, 0xb017 },
+		{ 0x213c, 0x006c, 0xf80f, 0xb017 }, { 0x2140, 0x0027, 0x0fe0, 0xb017 },
+		{ 0x2144, 0x006c, 0xf80f, 0xb017 }, { 0x2148, 0x002b, 0x0fe0, 0xb017 },
+		{ 0x214c, 0x00dc, 0xf00f, 0xb017 }, { 0x2150, 0x0000, 0x0010, 0xb017 },
+		{ 0x2154, 0x0000, 0x0000, 0xb017 }, { 0x2158, 0x0000, 0x0000, 0xb017 },
+		{ 0x215c, 0x0000, 0x0000, 0xb017 }, { 0x2160, 0x0000, 0x0000, 0xb017 },
+		{ 0x2164, 0x0000, 0x0010, 0xb017 }, { 0x2168, 0x0000, 0x0000, 0xb017 },
+		{ 0x216c, 0x0000, 0x0000, 0xb017 }, { 0x2170, 0x0000, 0x0000, 0xb017 },
+		{ 0x2174, 0x0000, 0x0000, 0xb017 }, { 0x2178, 0x0000, 0x0010, 0xb017 },
+		{ 0x217c, 0x0000, 0x0000, 0xb017 }, { 0x2180, 0x0000, 0x0000, 0xb017 },
+		{ 0x2184, 0x0000, 0x0000, 0xb017 }, { 0x2188, 0x0000, 0x0000, 0xb017 },
+		{ 0x2190, 0x0000, 0x0000, 0xb017 }, { 0x2194, 0x0000, 0x0000, 0xb017 },
+		{ 0x2198, 0x0000, 0x0000, 0xb017 }, { 0x219c, 0x0000, 0x0000, 0xb017 },
+		{ 0x21a0, 0x0000, 0x0010, 0xb017 }, { 0x21a4, 0x0000, 0x0000, 0xb017 },
+		{ 0x21a8, 0x0000, 0x0000, 0xb017 }, { 0x21ac, 0x0000, 0x0000, 0xb017 },
+		{ 0x21b0, 0x0000, 0x0000, 0xb017 }, { 0x21b4, 0x0000, 0x0010, 0xb017 },
+		{ 0x21b8, 0x0000, 0x0000, 0xb017 }, { 0x21bc, 0x0000, 0x0000, 0xb017 },
+		{ 0x21c0, 0x0000, 0x0000, 0xb017 }, { 0x21c4, 0x0000, 0x0000, 0xb017 },
+		{ 0x21c8, 0x0056, 0xc50f, 0xb017 }, { 0x21cc, 0x007b, 0xd7e1, 0xb017 },
+		{ 0x21d0, 0x0077, 0xa70e, 0xb017 }, { 0x21d4, 0x00e0, 0xbde1, 0xb017 },
+		{ 0x21d8, 0x0032, 0x530e, 0xb017 }, { 0x2204, 0x0049, 0xa10f, 0xb017 },
+		{ 0x2208, 0x006e, 0xbde0, 0xb017 }, { 0x220c, 0x0049, 0xa10f, 0xb017 },
+		{ 0x2210, 0x0061, 0xd2e0, 0xb017 }, { 0x2214, 0x0084, 0x570f, 0xb017 },
+		{ 0x2218, 0x0079, 0x0a00, 0xb017 }, { 0x221c, 0x00f2, 0x1400, 0xb017 },
+		{ 0x2220, 0x0079, 0x0a00, 0xb017 }, { 0x2224, 0x0061, 0xd2e0, 0xb017 },
+		{ 0x2228, 0x0084, 0x570f, 0xb017 }, { 0x222c, 0x004d, 0xe20e, 0xb017 },
+		{ 0x2230, 0x0066, 0x3be2, 0xb017 }, { 0x2234, 0x004d, 0xe20e, 0xb017 },
+		{ 0x2238, 0x0058, 0x4fe2, 0xb017 }, { 0x223c, 0x008c, 0xd80d, 0xb017 },
+		{ 0x2240, 0x004d, 0xe20e, 0xb017 }, { 0x2248, 0x004d, 0xe20e, 0xb017 },
+		{ 0x224c, 0x0058, 0x4fe2, 0xb017 }, { 0x2250, 0x008c, 0xd80d, 0xb017 },
+		{ 0x2254, 0x004d, 0xe20e, 0xb017 }, { 0x2258, 0x0066, 0x3be2, 0xb017 },
+		{ 0x225c, 0x004d, 0xe20e, 0xb017 }, { 0x2260, 0x0058, 0x4fe2, 0xb017 },
+		{ 0x2264, 0x008c, 0xd80d, 0xb017 }, { 0x2268, 0x004d, 0xe20e, 0xb017 },
+		{ 0x226c, 0x0066, 0x3be2, 0xb017 }, { 0x2270, 0x004d, 0xe20e, 0xb017 },
+		{ 0x2274, 0x0058, 0x4fe2, 0xb017 }, { 0x2278, 0x008c, 0xd80d, 0xb017 },
+		{ 0x227c, 0x004d, 0xe20e, 0xb017 }, { 0x2280, 0x0066, 0x3be2, 0xb017 },
+		{ 0x2284, 0x004d, 0xe20e, 0xb017 }, { 0x2288, 0x0058, 0x4fe2, 0xb017 },
+		{ 0x228c, 0x008c, 0xd80d, 0xb017 }, { 0x22cc, 0x00e8, 0x8d00, 0xb017 },
+		{ 0x22d0, 0x0000, 0x0000, 0xb017 }, { 0x22d4, 0x0018, 0x72ff, 0xb017 },
+		{ 0x22d8, 0x00ce, 0x25e1, 0xb017 }, { 0x22dc, 0x002f, 0xe40e, 0xb017 },
+		{ 0x238e, 0x0000, 0x0033, 0xb011 }, { 0x238f, 0x0000, 0x0013, 0xb011 },
+		{ 0x2390, 0x0000, 0x00f0, 0xb011 }, { 0x2391, 0x0000, 0x0003, 0xb011 },
+		{ 0x2392, 0x0000, 0x0093, 0xb011 }, { 0x2393, 0x0000, 0x0068, 0xb011 },
+		{ 0x2394, 0x0000, 0x0011, 0xb011 }, { 0x2395, 0x0000, 0x0064, 0xb011 },
+		{ 0x2396, 0x0000, 0x00b6, 0xb011 }, { 0x2397, 0x0000, 0x0028, 0xb011 },
+		{ 0x2398, 0x0000, 0x0008, 0xb011 }, { 0x239a, 0x0000, 0x0099, 0xb011 },
+		{ 0x239b, 0x0000, 0x000d, 0xb011 }, { 0x23a7, 0x0000, 0x0078, 0xb011 },
+		{ 0x23b9, 0x0000, 0x0000, 0xb011 }, { 0x23e0, 0x0000, 0x0021, 0xb011 },
+		{ 0x23e1, 0x0000, 0x0001, 0xb011 }, { 0x203a, 0x0000, 0x0081, 0xb011 },
+		{ 0x23ff, 0x0000, 0x0001, 0xb011 }
+	};
+
+	if (action != HDA_FIXUP_ACT_INIT)
+		return;
+
+	// Set up the static coefficients
+	for (i = 0; i < ARRAY_SIZE(fixups); i++)
+		alc_write_coef_idx(codec, fixups[i].coeff_idx, fixups[i].coeff_value);
+
+	// Send data to the amps
+	alc_write_coef_idx(codec, 0x22, 0x0038);
+	alc_write_coef_idx(codec, 0x89, 0x0000);
+	alc_write_coef_idx(codec, 0x22, 0x0038);
+	alc_write_coef_idx(codec, 0x22, 0x0038);
+
+	for (i = 0; i < ARRAY_SIZE(amp1); i++)
+		alc298_samsung_write_coef_pack2(codec, amp1[i]);
+
+	alc_write_coef_idx(codec, 0x89, 0x0000);
+
+	for (i = 0; i < ARRAY_SIZE(amp2); i++)
+		alc298_samsung_write_coef_pack2(codec, amp2[i]);
+
+	alc_write_coef_idx(codec, 0x89, 0x0000);
+
+	for (i = 0; i < ARRAY_SIZE(amp3); i++)
+		alc298_samsung_write_coef_pack2(codec, amp3[i]);
+
+	alc_write_coef_idx(codec, 0x22, 0x0039);
+
+	for (i = 0; i < ARRAY_SIZE(amp4); i++)
+		alc298_samsung_write_coef_pack2(codec, amp4[i]);
+
+	alc_write_coef_idx(codec, 0x89, 0x0000);
+
+	for (i = 0; i < ARRAY_SIZE(amp5); i++)
+		alc298_samsung_write_coef_pack2(codec, amp5[i]);
+
+	alc_write_coef_idx(codec, 0x89, 0x0000);
+
+	for (i = 0; i < ARRAY_SIZE(amp6); i++)
+		alc298_samsung_write_coef_pack2(codec, amp6[i]);
+
+	alc_write_coef_idx(codec, 0x22, 0x0038);
+}
+
 #if IS_REACHABLE(CONFIG_INPUT)
 static void gpio2_mic_hotkey_event(struct hda_codec *codec,
 				   struct hda_jack_callback *event)
@@ -7426,6 +7672,7 @@ enum {
 	ALC236_FIXUP_HP_MUTE_LED,
 	ALC236_FIXUP_HP_MUTE_LED_MICMUTE_VREF,
 	ALC298_FIXUP_SAMSUNG_AMP,
+	ALC298_FIXUP_SAMSUNG_AMP2,
 	ALC298_FIXUP_SAMSUNG_HEADPHONE_VERY_QUIET,
 	ALC256_FIXUP_SAMSUNG_HEADPHONE_VERY_QUIET,
 	ALC295_FIXUP_ASUS_MIC_NO_PRESENCE,
@@ -9021,6 +9268,10 @@ static const struct hda_fixup alc269_fixups[] = {
 		.chained = true,
 		.chain_id = ALC298_FIXUP_SAMSUNG_HEADPHONE_VERY_QUIET
 	},
+	[ALC298_FIXUP_SAMSUNG_AMP2] = {
+		.type = HDA_FIXUP_FUNC,
+		.v.func = alc298_fixup_samsung_amp2
+	},
 	[ALC298_FIXUP_SAMSUNG_HEADPHONE_VERY_QUIET] = {
 		.type = HDA_FIXUP_VERBS,
 		.v.verbs = (const struct hda_verb[]) {
@@ -10352,6 +10603,7 @@ static const struct snd_pci_quirk alc269_fixup_tbl[] = {
 	SND_PCI_QUIRK(0x144d, 0xc832, "Samsung Galaxy Book Flex Alpha (NP730QCJ)", ALC256_FIXUP_SAMSUNG_HEADPHONE_VERY_QUIET),
 	SND_PCI_QUIRK(0x144d, 0xca03, "Samsung Galaxy Book2 Pro 360 (NP930QED)", ALC298_FIXUP_SAMSUNG_AMP),
 	SND_PCI_QUIRK(0x144d, 0xc868, "Samsung Galaxy Book2 Pro (NP930XED)", ALC298_FIXUP_SAMSUNG_AMP),
+	SND_PCI_QUIRK(0x144d, 0xc1ca, "Samsung Galaxy Book3 Pro 360 (NP960QFG-KB1US)", ALC298_FIXUP_SAMSUNG_AMP2),
 	SND_PCI_QUIRK(0x1458, 0xfa53, "Gigabyte BXBT-2807", ALC283_FIXUP_HEADSET_MIC),
 	SND_PCI_QUIRK(0x1462, 0xb120, "MSI Cubi MS-B120", ALC283_FIXUP_HEADSET_MIC),
 	SND_PCI_QUIRK(0x1462, 0xb171, "Cubi N 8GL (MS-B171)", ALC283_FIXUP_HEADSET_MIC),
@@ -10781,6 +11033,7 @@ static const struct hda_model_fixup alc269_fixup_models[] = {
 	{.id = ALC298_FIXUP_HUAWEI_MBX_STEREO, .name = "huawei-mbx-stereo"},
 	{.id = ALC256_FIXUP_MEDION_HEADSET_NO_PRESENCE, .name = "alc256-medion-headset"},
 	{.id = ALC298_FIXUP_SAMSUNG_AMP, .name = "alc298-samsung-amp"},
+	{.id = ALC298_FIXUP_SAMSUNG_AMP2, .name = "alc298-samsung-amp2"},
 	{.id = ALC256_FIXUP_SAMSUNG_HEADPHONE_VERY_QUIET, .name = "alc256-samsung-headphone"},
 	{.id = ALC255_FIXUP_XIAOMI_HEADSET_MIC, .name = "alc255-xiaomi-headset"},
 	{.id = ALC274_FIXUP_HP_MIC, .name = "alc274-hp-mic-detect"},
